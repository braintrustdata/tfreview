Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # data.aws_ami.ubuntu will be read during apply
  # (config refers to values not yet known)
 <= data "aws_ami" "ubuntu" {
      + architecture          = (known after apply)
      + arn                   = (known after apply)
      + block_device_mappings = (known after apply)
      + boot_mode             = (known after apply)
      + creation_date         = (known after apply)
      + description           = (known after apply)
      + ena_support           = (known after apply)
      + hypervisor            = (known after apply)
      + id                    = (known after apply)
      + image_id              = (known after apply)
      + image_location        = (known after apply)
      + image_owner_alias     = (known after apply)
      + image_type            = (known after apply)
      + imds_support          = (known after apply)
      + kernel_id             = (known after apply)
      + most_recent           = true
      + name                  = (known after apply)
      + owner_id              = (known after apply)
      + owners                = [
          + "099720109477",
        ]
      + platform              = (known after apply)
      + platform_details      = (known after apply)
      + product_codes         = (known after apply)
      + public                = (known after apply)
      + ramdisk_id            = (known after apply)
      + root_device_name      = (known after apply)
      + root_device_type      = (known after apply)
      + root_snapshot_id      = (known after apply)
      + sriov_net_support     = (known after apply)
      + state                 = (known after apply)
      + state_reason          = (known after apply)
      + tags                  = (known after apply)
      + tpm_support           = (known after apply)
      + usage_operation       = (known after apply)
      + virtualization_type   = (known after apply)

      + filter {
          + name   = "name"
          + values = [
              + "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
            ]
        }

      + filter {
          + name   = "virtualization-type"
          + values = [
              + "hvm",
            ]
        }
    }

  # aws_instance.web_servers[0] will be created
  + resource "aws_instance" "web_servers" {
      + ami                                         = (known after apply)
      + arn                                         = (known after apply)
      + associate_public_ip_address                 = (known after apply)
      + availability_zone                           = (known after apply)
      + cpu_core_count                              = (known after apply)
      + cpu_threads_per_core                        = (known after apply)
      + disable_api_stop                            = (known after apply)
      + disable_api_termination                     = (known after apply)
      + ebs_optimized                               = (known after apply)
      + get_password_data                           = false
      + host_id                                     = (known after apply)
      + host_resource_group_arn                     = (known after apply)
      + iam_instance_profile                        = (known after apply)
      + id                                          = (known after apply)
      + instance_initiated_shutdown_behavior        = (known after apply)
      + instance_state                              = (known after apply)
      + instance_type                               = "t3.small"
      + ipv6_address_count                          = (known after apply)
      + ipv6_addresses                              = (known after apply)
      + key_name                                    = "web-server-key"
      + monitoring                                  = (known after apply)
      + outpost_arn                                 = (known after apply)
      + password_data                               = (known after apply)
      + placement_group                             = (known after apply)
      + placement_partition_number                  = (known after apply)
      + primary_network_interface_id                = (known after apply)
      + private_dns_hostname_type_on_launch         = (known after apply)
      + private_ip                                  = (known after apply)
      + public_dns                                  = (known after apply)
      + public_ip                                   = (known after apply)
      + secondary_private_ips                       = (known after apply)
      + security_groups                             = (known after apply)
      + source_dest_check                           = true
      + subnet_id                                   = "subnet-0123456789abcdef0"
      + tags                                        = {
          + "Environment" = "production"
          + "Name"        = "web-server-0"
          + "Role"        = "webserver"
        }
      + tags_all                                    = {
          + "Environment" = "production"
          + "Name"        = "web-server-0"
          + "Role"        = "webserver"
        }
      + tenancy                                     = (known after apply)
      + user_data                                   = (known after apply)
      + user_data_base64                            = (known after apply)
      + user_data_replace_on_change                 = false
      + vpc_security_group_ids                      = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + final_snapshot        = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + private_dns_name_options {
          + enable_resource_name_dns_a_record    = (known after apply)
          + enable_resource_name_dns_aaaa_record = (known after apply)
          + hostname_type                        = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + final_snapshot        = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # aws_secretsmanager_secret_version.db_password will be updated in-place
  ~ resource "aws_secretsmanager_secret_version" "db_password" {
        id            = "arn:aws:secretsmanager:us-west-2:123456789012:secret:db-password-AbCdEf|terraform-20240115120000123456789012"
      ~ secret_string = (sensitive value)
        # (4 unchanged attributes hidden)
    }

Changes to Outputs:
  + instance_public_ips = (sensitive value)
  ~ database_endpoint   = "myapp-db.cluster-xyz.us-west-2.rds.amazonaws.com" -> (known after apply)

Plan: 1 to add, 1 to change, 0 to destroy.