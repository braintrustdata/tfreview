Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create
  ~ update in-place
  - destroy

Terraform will perform the following actions:

  # aws_instance.example will be created
  + resource "aws_instance" "example" {
      + ami                                         = "ami-0c7217cdde317cfec"
      + arn                                         = (known after apply)
      + associate_public_ip_address                 = (known after apply)
      + availability_zone                           = (known after apply)
      + cpu_core_count                              = (known after apply)
      + cpu_threads_per_core                        = (known after apply)
      + disable_api_stop                            = (known after apply)
      + disable_api_termination                     = (known after apply)
      + ebs_optimized                               = (known after apply)
      + get_password_data                           = false
      + host_id                                     = (known after apply)
      + host_resource_group_arn                     = (known after apply)
      + iam_instance_profile                        = (known after apply)
      + id                                          = (known after apply)
      + instance_initiated_shutdown_behavior        = (known after apply)
      + instance_state                              = (known after apply)
      + instance_type                               = "t3.micro"
      + ipv6_address_count                          = (known after apply)
      + ipv6_addresses                              = (known after apply)
      + key_name                                    = (known after apply)
      + monitoring                                  = (known after apply)
      + outpost_arn                                 = (known after apply)
      + password_data                               = (known after apply)
      + placement_group                             = (known after apply)
      + placement_partition_number                  = (known after apply)
      + primary_network_interface_id                = (known after apply)
      + private_dns_hostname_type_on_launch         = (known after apply)
      + private_ip                                  = (known after apply)
      + public_dns                                  = (known after apply)
      + public_ip                                   = (known after apply)
      + secondary_private_ips                       = (known after apply)
      + security_groups                             = (known after apply)
      + source_dest_check                           = true
      + subnet_id                                   = (known after apply)
      + tags                                        = {
          + "Environment" = "development"
          + "Name"        = "example-instance"
        }
      + tags_all                                    = {
          + "Environment" = "development"
          + "Name"        = "example-instance"
        }
      + tenancy                                     = (known after apply)
      + user_data                                   = (known after apply)
      + user_data_base64                            = (known after apply)
      + user_data_replace_on_change                 = false
      + vpc_security_group_ids                      = (known after apply)
    }

  # aws_security_group.web will be updated in-place
  ~ resource "aws_security_group" "web" {
        id                     = "sg-0123456789abcdef0"
        name                   = "web-security-group"
        # (8 unchanged attributes hidden)

      ~ ingress {
          ~ cidr_blocks      = [
              - "10.0.0.0/8",
              + "10.0.0.0/16",
            ]
            # (6 unchanged attributes hidden)
        }
    }

  # aws_s3_bucket.legacy will be destroyed
  - resource "aws_s3_bucket" "legacy" {
      - arn                         = "arn:aws:s3:::my-legacy-bucket-12345" -> null
      - bucket                      = "my-legacy-bucket-12345" -> null
      - bucket_domain_name          = "my-legacy-bucket-12345.s3.amazonaws.com" -> null
      - bucket_regional_domain_name = "my-legacy-bucket-12345.s3.us-west-2.amazonaws.com" -> null
      - force_destroy               = false -> null
      - hosted_zone_id              = "Z3BJ6K6RIION7M" -> null
      - id                          = "my-legacy-bucket-12345" -> null
      - object_lock_enabled         = false -> null
      - policy                      = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "s3:GetObject"
                      - Effect    = "Allow"
                      - Principal = "*"
                      - Resource  = "arn:aws:s3:::my-legacy-bucket-12345/*"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - region                      = "us-west-2" -> null
      - request_payer               = "BucketOwner" -> null
      - tags                        = {} -> null
      - tags_all                    = {} -> null

      - grant {
          - id          = "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a" -> null
          - permissions = [
              - "FULL_CONTROL",
            ] -> null
          - type        = "CanonicalUser" -> null
        }

      - server_side_encryption_configuration {
          - rule {
              - bucket_key_enabled = false -> null

              - apply_server_side_encryption_by_default {
                  - sse_algorithm = "AES256" -> null
                }
            }
        }

      - versioning {
          - enabled    = false -> null
          - mfa_delete = false -> null
        }
    }

Plan: 1 to add, 1 to change, 1 to destroy.